{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "93ffce99-7f73-47ff-958a-0d6e790962d6": {
        "id": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "parent": null,
        "name": "HotSpaces-Vendor",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "98bc0377-64db-471d-a7bf-74451db9bf90",
          "434a5a29-a383-4df0-bed5-0abfa85d17d4",
          "e3525801-37ee-4812-b654-b95f419c079e",
          "0136c15c-311e-415a-ad68-78090bf12541",
          "fee713c1-57ce-4563-8763-b5987d956e02",
          "9b90313d-8c54-42b1-9115-3b8a7826b663",
          "dac9deff-34fa-46f9-81b9-d82feaf60240",
          "4ed6d4c5-d54d-482b-b03a-2232e44d86aa"
        ],
        "isRemovable": false,
        "filePath": "HotSpaces-Vendor"
      },
      "98bc0377-64db-471d-a7bf-74451db9bf90": {
        "id": "98bc0377-64db-471d-a7bf-74451db9bf90",
        "parent": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "name": "readQR.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "HotSpaces-Vendor/readQR.js",
        "code": "exports.handler = function(event, context, callback) {\n    \n    callback(null, {\"message\": \"Successfully executed\"});\n}",
        "triggers": [],
        "config": {
          "runtime": "nodejs8.10",
          "timeout": 60,
          "memory": 128
        },
        "testCases": {
          "cadc76ff-8048-48e3-916e-84e2a04b67cd": {
            "id": "cadc76ff-8048-48e3-916e-84e2a04b67cd",
            "name": "createQr",
            "functionId": "98bc0377-64db-471d-a7bf-74451db9bf90",
            "event": "{\"queryStringParameters\":{\n    \"promo\": \"43c33f3a-2161-4579-8b4a-7e2ab29ea364\",\n    \"vendor\": \"d1e7f6b7-1664-4525-850a-c2d761b16a29\",\n    \"grab\": \"3457657676588\",\n    \"user\": \"cassie\"\n}\n}"
          }
        }
      },
      "434a5a29-a383-4df0-bed5-0abfa85d17d4": {
        "id": "434a5a29-a383-4df0-bed5-0abfa85d17d4",
        "parent": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "name": "redeemOffer.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "HotSpaces-Vendor/redeemOffer.js",
        "code": "exports.handler = function(event, context, callback) {\n    \n    callback(null, {\"message\": \"Successfully executed\"});\n}",
        "triggers": [],
        "config": {
          "runtime": "nodejs8.10",
          "timeout": 60,
          "memory": 128
        }
      },
      "e3525801-37ee-4812-b654-b95f419c079e": {
        "id": "e3525801-37ee-4812-b654-b95f419c079e",
        "parent": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "name": "createQR.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "HotSpaces-Vendor/createQR.js",
        "code": "let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function (event, context, callback) {\n\n    console.log(\"event\", event.queryStringParameters);\n    ddb.query({\n        TableName: 'HS_Promotions',\n        ExpressionAttributeValues: {\n            ':promo': event.queryStringParameters.promo,\n            ':vendor': event.queryStringParameters.vendor\n        },\n        KeyConditionExpression: 'promoId = :promo',\n        FilterExpression: 'vendorId = :vendor'\n    }).promise().then(function (data) {\n        console.log('data', data.Items);\n        let qr = {\n            \"promo\": event.queryStringParameters.promo,\n            \"vendor\": event.queryStringParameters.vendor,\n            \"type\": data.Item.category,\n            \"user\": event.queryStringParameters.user,\n            \"grabTime\": event.queryStringParameters.grab\n        };\n\n        let dt = new Date().getTime();\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        var uuid = qr.type + uuid;\n        console.log('loggg', uuid);\n        ddb.put({\n            TableName: 'HS_QR',\n            Item: { 'vendorId': qr.vendor, 'promoId': qr.promo, 'QRId': uuid, 'category': qr.type, 'user': qr.user, 'grabTime': qr.grabTime }\n        }).promise().then(function (data) {\n            let response = {\n                \"statusCode\": 200,\n                \"headers\": {\n                    \"my_header\": \"my_value\"\n                },\n                \"body\": JSON.stringify(uuid),\n                \"isBase64Encoded\": false\n            };\n            callback(null, response);\n        }).catch(function (err) {\n            let response = {\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"my_header\": \"my_value\"\n                },\n                \"body\": err,\n                \"isBase64Encoded\": false\n            };\n            callback(null, response);\n        });\n\n\n    }).catch(function (err) {\n        let response = {\n            \"statusCode\": 502,\n            \"headers\": {\n                \"my_header\": \"my_value\"\n            },\n            \"body\": err,\n            \"isBase64Encoded\": false\n        };\n        callback(null, response);\n    });\n}",
        "triggers": [],
        "config": {
          "runtime": "nodejs8.10",
          "timeout": 60,
          "memory": 128
        },
        "testCases": {
          "920f74c6-4fd9-4e71-86ca-981daf7cfa16": {
            "id": "920f74c6-4fd9-4e71-86ca-981daf7cfa16",
            "name": "createQR",
            "functionId": "e3525801-37ee-4812-b654-b95f419c079e",
            "event": "{\"queryStringParameters\":{\n    \"promo\": \"43c33f3a-2161-4579-8b4a-7e2ab29ea364\",\n    \"vendor\": \"d1e7f6b7-1664-4525-850a-c2d761b16a29\",\n    \"grab\": \"3457657676588\",\n    \"user\": \"cassie\"\n}\n}"
          }
        }
      },
      "0136c15c-311e-415a-ad68-78090bf12541": {
        "id": "0136c15c-311e-415a-ad68-78090bf12541",
        "parent": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "name": "addPromotion.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "HotSpaces-Vendor/addPromotion.js",
        "code": "let dynamoDBService = require('./dynamoDbService');\n\nexports.handler = function(event, context, callback) {\n    \n    dynamoDBService.addPromo(promoData)\n        .then(function (data) {\n        console.log(\"Success\", data);\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 200,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": JSON.stringify(promoData)\n            });\n        }).catch(function (err) {\n            console.log(\"Error\", err);\n            callback(null, {\n                \"isBase64Encoded\": true,\n                \"statusCode\": 502,\n                \"headers\": {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Access-Control-Allow-Methods\": \"*\"\n                },\n                \"body\": err.message\n            });\n        });\n        \n}",
        "triggers": [],
        "config": {
          "runtime": "nodejs8.10",
          "timeout": 60,
          "memory": 128
        }
      },
      "fee713c1-57ce-4563-8763-b5987d956e02": {
        "id": "fee713c1-57ce-4563-8763-b5987d956e02",
        "parent": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "name": "getPromotion.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "HotSpaces-Vendor/getPromotion.js",
        "code": "exports.handler = function(event, context, callback) {\n    \n    callback(null, {\"message\": \"Successfully executed\"});\n}",
        "triggers": [],
        "config": {
          "runtime": "nodejs8.10",
          "timeout": 60,
          "memory": 128
        }
      },
      "9b90313d-8c54-42b1-9115-3b8a7826b663": {
        "id": "9b90313d-8c54-42b1-9115-3b8a7826b663",
        "parent": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "name": "deletePromotion.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "HotSpaces-Vendor/deletePromotion.js",
        "code": "exports.handler = function(event, context, callback) {\n    \n    callback(null, {\"message\": \"Successfully executed\"});\n}",
        "triggers": [],
        "config": {
          "runtime": "nodejs8.10",
          "timeout": 60,
          "memory": 128
        }
      },
      "dac9deff-34fa-46f9-81b9-d82feaf60240": {
        "id": "dac9deff-34fa-46f9-81b9-d82feaf60240",
        "parent": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "name": "updatePromotion.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "HotSpaces-Vendor/updatePromotion.js",
        "code": "exports.handler = function(event, context, callback) {\n    \n     let timestamp = Math.round((new Date()).getTime() / 1000);\n    // console.log(timestamp);\n    let body = JSON.parse(event.body);\n    console.log(body)\n    let promoData = {\n        promoId : uuidv4(),\n        vendorId : body.vendorId,\n        offerType : body.offerType,\n        discount : body.discount,\n        startDate : body.startDate,\n        endDate : body.endDate,\n        startTime: body.startTime,\n        endTime: body.endTime,\n        selectedDays : body.selectedDays,\n        description : body.description,\n        title : body.title,\n        unitPrice : body.unitPrice,\n        imgUrl : body.imgUrls,\n        terms : body.terms,\n        businessType : body.businessType,\n        timestamp: timestamp,\n        locationBox: body.locationBox,\n        latNLong: body.latNLong\n    };\n    \n}",
        "triggers": [],
        "config": {
          "runtime": "nodejs8.10",
          "timeout": 60,
          "memory": 128
        }
      },
      "4ed6d4c5-d54d-482b-b03a-2232e44d86aa": {
        "id": "4ed6d4c5-d54d-482b-b03a-2232e44d86aa",
        "parent": "93ffce99-7f73-47ff-958a-0d6e790962d6",
        "name": "dynamoDBService.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "HotSpaces-Vendor/dynamoDBService.js",
        "code": "let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nmodule.exports = {\n\n    getUser: function (userId) {\n        return ddb.query({\n            TableName: 'HS_User',\n            ExpressionAttributeValues: {\n                ':user_id': userId\n            },\n            KeyConditionExpression: 'user_id = :user_id'\n        }).promise()\n\n    },\n\n    /*\n     userData={\n         name : string,\n         role : string,\n         vender_id : string\n     }\n     */\n    addUser: function (userData) {\n        let userId = userData.uid;\n        let name = userData.name;\n        let role = userData.role;\n        let vendor_id = userData.vendor_id;\n        return ddb.put({\n            TableName: 'HS_User',\n            Item: {\n                'user_id': userId,\n                'name': name,\n                'role': role,\n                'vendor_id': vendor_id\n            }\n        }).promise();\n    },\n\n    /*\n     userData={\n         name : string\n     }\n     */\n    addVendor: function (vendorData) {\n        let vendorId = uuidv4();\n        let name = vendorData.name;\n        return ddb.put({\n            TableName: 'HS_Vendor',\n            Item: {\n                'vendor_id': vendorId,\n                'name': name\n            }\n        }).promise();\n    },\n\n    getVendors: function () {\n        return ddb.scan({\n            TableName: 'HS_Vendor'\n        }).promise();\n    },\n\n    getVendor: function (vendorId) {\n        return ddb.query({\n            TableName: 'HS_Vendor',\n            ExpressionAttributeValues: {\n                ':vendor_id': vendorId\n            },\n            KeyConditionExpression: 'vendor_id = :vendor_id'\n        }).promise()\n    },\n\n    addPromo: function (promoData) {\n        return ddb.put({\n            TableName: 'HS_Promotions',\n            Item: {\n                'promoId': promoData.promoId,\n                'vendorId': promoData.vendorId,\n                'termsNConditions': promoData.terms,\n                'offerType': promoData.offerType,\n                'startDate': promoData.startDate,\n                'endDate': promoData.endDate,\n                'startTime': promoData.startTime,\n                'endTime': promoData.endTime,\n                'selectedDays': promoData.selectedDays,\n                'description': promoData.description,\n                'unitPrice': promoData.unitPrice,\n                'title': promoData.title,\n                'imgUrls': promoData.imgUrl,\n                'discount': promoData.discount,\n                'category': promoData.businessType,\n                'timestamp': promoData.timestamp,\n                'locationBox': promoData.locationBox,\n                'latNLong': promoData.latNLong\n            }\n        }).promise()\n\n    },\n\n    deletePromo: function (promoData) {\n        return ddb.delete({\n            TableName: 'HS_Promotions',\n            Key: {\n                'promoId': promoData.promoID,\n                'timestamp': timestamp\n            }\n        }).promise()\n    },\n\n    retrievePromos: function (date) {\n        return ddb.scan({\n            TableName: 'HS_Promotions',\n            ExpressionAttributeValues: {\n                ':date': date\n            },\n            FilterExpression: 'startDate <= :date and endDate >= :date'\n        }).promise()\n    },\n\n    updatePromo: function (updatedData) {\n        return ddb.update({\n            TableName: 'HS_Promotions',\n            Key: {\n                'promoId': updatedData.promoId,\n                'timestamp': updatedData.timestamp\n            },\n            ExpressionAttributeNames: {\n                '#promoId': 'promoId',\n                '#category': 'category',\n                '#description': 'description',\n                '#discount': 'discount',\n                '#endDate': 'endDate',\n                '#endTime': 'endTime',\n                '#imgUrls': 'imgUrls',\n                '#latNLong': 'latNLong',\n                '#locationBox': 'locationBox',\n                '#offerType': 'offerType',\n                '#selectedDays': 'selectedDays',\n                '#startDate': 'startDate',\n                '#startTime': 'startTime'\n            },\n            ExpressionAttributeValues: {\n                ':promoId': updatedData.promoId,\n                ':category': updatedData.businessType,\n                ':description': updatedData.description,\n                ':discount': updatedData.discount,\n                ':endDate': updatedData.endDate,\n                ':endTime': updatedData.endTime,\n                ':imgUrls': updatedData.imgUrl,\n                ':latNLong': updatedData.latNLong,\n                ':locationBox': updatedData.locationBox,\n                ':offerType': updatedData.offerType,\n                ':selectedDays': updatedData.selectedDays,\n                ':startDate': updatedData.startDate,\n                ':startTime': updatedData.startTime\n            },\n            UpdateExpression: 'set #category = :category , #description = :category , #discount = :discount , #endDate = :endDate , #endTime = :promoId , #imgUrls = :imgUrls , #latNLong = :latNLong , #locationBox = :locationBox , #offerType = :offerType , #selectedDays = :selectedDays , #startDate = :startDate , #startTime = :startTime',\n            ConditionExpression: '#promoId = :promoId'\n        }).promise()\n    }\n}",
        "triggers": []
      }
    },
    "deletedFiles": [],
    "rootNode": "93ffce99-7f73-47ff-958a-0d6e790962d6",
    "openFiles": [
      "98bc0377-64db-471d-a7bf-74451db9bf90",
      "434a5a29-a383-4df0-bed5-0abfa85d17d4",
      "e3525801-37ee-4812-b654-b95f419c079e",
      "0136c15c-311e-415a-ad68-78090bf12541",
      "fee713c1-57ce-4563-8763-b5987d956e02",
      "9b90313d-8c54-42b1-9115-3b8a7826b663",
      "dac9deff-34fa-46f9-81b9-d82feaf60240",
      "4ed6d4c5-d54d-482b-b03a-2232e44d86aa"
    ],
    "currentFileId": "4ed6d4c5-d54d-482b-b03a-2232e44d86aa",
    "resources": {
      "ddbHSPromotions": {
        "name": "ddbHSPromotions",
        "type": "DynamoDB",
        "config": {
          "mode": 1,
          "operation": "scan",
          "table": {
            "arn": "arn:aws:dynamodb:us-east-1:318300609668:table/HS_Promotions",
            "name": "HS_Promotions",
            "partitionKey": "promoId",
            "partitionKeyType": "S",
            "hasSortKey": true,
            "sortKey": "timestamp",
            "sortKeyType": "N",
            "mode": 0
          },
          "parameters": {
            "TableName": "HS_Promotions",
            "ExpressionAttributeValues": {
              ":date": "@{date}"
            },
            "FilterExpression": "startDate <= :date and endDate >= :date"
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "ddbHSQR": {
        "name": "ddbHSQR",
        "type": "DynamoDB",
        "config": {
          "mode": 1,
          "operation": "put",
          "table": {
            "arn": "arn:aws:dynamodb:us-east-1:318300609668:table/HS_QR",
            "name": "HS_QR",
            "partitionKey": "QRId",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "mode": 0
          },
          "parameters": {
            "Key": {},
            "Item": {
              "vendorId": "hello",
              "promoId": "hello",
              "QRId": "heel",
              "category": 1,
              "user": "cassie",
              "grabTime": 24355768900
            },
            "ExpressionAttributeValues": {}
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "ddbHSuser": {
        "name": "ddbHSuser",
        "type": "DynamoDB",
        "config": {
          "mode": 1,
          "operation": "put",
          "table": {
            "arn": "arn:aws:dynamodb:us-east-1:318300609668:table/HS_user",
            "name": "HS_user",
            "partitionKey": "user_id",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "mode": 0
          },
          "parameters": {
            "TableName": "HS_user",
            "Item": {
              "user_id": "@{userId}",
              "name": "@{name}",
              "role": "@{role}",
              "vendor_id": "@{vendor_id}"
            }
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      },
      "ddbHSvendor": {
        "name": "ddbHSvendor",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "scan",
          "table": {
            "arn": "arn:aws:dynamodb:us-east-1:318300609668:table/HS_vendor",
            "name": "HS_vendor",
            "partitionKey": "vendor_id",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "mode": 0
          },
          "parameters": {
            "TableName": "HS_vendor"
          },
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        },
        "globallyEditable": false
      }
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "uuid": {
          "name": "uuid",
          "version": "3.3.2"
        }
      }
    },
    "lambdaId": "98bc0377-64db-471d-a7bf-74451db9bf90"
  },
  "PROJECT_META": {
    "projectName": "HotSpaces-Vendor",
    "projectDescription": "Backend implementation for HotSpaces Vendor app",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1543493638787
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "HotSpaces-Vendor",
      "url": "https://github.com/Cassendra4/HotSpaces-Vendor"
    }
  }
}